/**
@rofi
*/

/*roots of a quadratic equation*/
#include<iostream>
#include<cmath>
using namespace std;

int main(int argc, char const *argv[])
{
	float a, b, c, D;

	//read a , b, c
	cout<<"Input the co-efficients: ";
	cin>>a>>b>>c;


	//calculte discriminent
	D = b*b - 4*a*c;


	//check root type
	if(D<0){
		//roots are complex
		cout<<"\nRoots Are Complex.";
	}else{
		//Display the roots

		//first root
		float x = (-b + sqrt(D)) / 2*a;

		//second root
		float y = (-b - sqrt(D)) / 2*a;

		cout<<"\nRoots are: "<<x<<" and "<<y<<".\n";

	}
	return 0;
}/**
@rofi
*/

/*11. Write a program to print the digits of a number in words.
 ( eg. if a number 841 is entered through the keyboard your program
  should print “Eight Four One”.)  
 */
#include<iostream>
using namespace std;

int main(int argc, char const *argv[])
{
	int n, digits_rev[100], i=0;

	cout<<"Input a number:";
	cin>>n;

	int t = n;
	//store the digits in an array
	while(t != 0){
		digits_rev[i++] = t%10;
		t = t/10;
	}


	//display the numbers in words from digits_rev array
	cout<<"\nThe number "<<n<<" in words as: ";
	for(int j=i-1; j>=0; j--){

		//loop through the array
		int digit = digits_rev[j];
		switch(digit)
		{
			case 0 : cout<<" Zero";
					 //break;
			case 1 : cout<<" One";
					 break;
			case 2 : cout<<" Two";
					 break;
		    case 3 : cout<<" Three";
					 break;
			case 4 : cout<<" Four";
					 break;

			case 5 : cout<<" Five";
					 break;
			case 6 : cout<<" Six";
			         break;
			case 7 : cout<<" Seven";
			         break;
			case 8 : cout<<" Eight";
					 break;
			case 9 : cout<<" One";
					 break;
			default  : break;

		}
	}
    cout<<"\n";



	return 0;
}

//@rofi

/*
12. Write a program to print the PASCAL Triangle up to the n-th row where n is an input to the program.
*/

int main(int argc, char const *argv[])
{
	
	
	return 0;
}/*rofi*/
/*
13. Write a function to return the HCF of two positive integers. 
Write a main function to read two positive integers and print their HCF and LCM by using the above function.
*/

#include<iostream>
using namespace std;

//function to calculate HCF
int hcf(int a, int b)
{
	if(a == 0){
		return b;
	}
	return hcf(b%a, a);
}


int main(int argc, char const *argv[])
{
	int a, b, y, x;


	cout<<"Input two numbers to calculate HCF and LCM:";
	cin>>a>>b;

	y = hcf(a,b);

	//relation HCF*LCM = num1 * num2
	x = (a*b)/y;

	cout<<"HCF & LCM of "<<a<<" and "<<b<<" are "<<y<<","<<x<<" respectively.\n";
	return 0;
}//@rofi

/**
14. Write a program to convert a decimal number into binary number using function.
*/
#include <iostream>
using namespace std;

void to_binary(int n)
{
    // Size of an integer is assumed to be 32 bits
    for(int i = 31; i >= 0; i--) 
    {
        int k = n >> i;
        if (k & 1)
            cout<<"1";
        else
            cout<<"0";
    }
    cout<<"\n";
}

int main(int argc, char const *argv[])
{
	int n;

	cout<<"Input a number to convert into binary:";
	cin>>n;


	cout<<"The binary form of "<<n<<" is: ";
	//call
	to_binary(n);


	return 0;
}//@rofi
/**
15. Write a program to display the result of sine series using function.
*/
#include <iostream>
#include<cmath>

using namespace std;

/*we will use our own namespace as sin() function exists*/
namespace ns{
	float sin(float x);
}


//defining our own sin function
float ns::sin(float x)
{
	//convert the input to radian
	 x = x * (M_PI/180.00);
    

     //set initial term & desired accuracy 
    float t = x, accuracy = 0.0001;


    //actual value using the library function
    float val = std::sin(x); 


    //sinx is the sum of the series
    float sinx = x;
	 

    int i = 1;
    do
    {
    	//calulating the term
        float d = 2 * i * (2 * i + 1);
        t = -t * x * x / d;

        //sum of the series
        sinx = sinx + t;
        i = i + 1;

        //if desired accuracy is achived return result
    }while (accuracy <= fabs(val - sinx));

    
    return sinx;
}
	



int main(int argc, char const *argv[])
{
	/* code */
	float degree;

	cout<<"Input to calculate sine value: ";
	cin>>degree;


	//our function result
	cout<<"Our result:"<<ns::sin(degree);

	cout<<"\nLibrary function result: "<<sin(degree)<<"\n";
	return 0;
}//@rofi

/**
16.  Write a program to find the sum of the following series
	1+x-x^3/3!+x^5/5!-x^7/7!+ . . . . . corrected up to the 3 decimal place.
*/

#include <iostream>
#include <cmath>
using namespace std;

float series_sum(x)
{
	//general term of the series is

}


int main(int argc, char const *argv[])
{
	int x;

	cout<<"Input value of X: ";
	cin>>x;


	//display the value corrected upto 3 decimal place
	cout<<"1+x-x^3/3!+x^5/5!-x^7/7!+ . . . . : = "<<series_sum(x)<<"\n"; 
	return 0;
}//@rofi

/**
17. Write a program to read n numbers in a sorted array and insert 
a given element  in a  particular position
**/

#include<iostream>
using namespace std;


/**
@params: arr[] a sorted arry
         n number to be inserted
         pos position for insertion
*/
void insert_pos(int arr[], int value, int pos)
{
       //determinig the array size
       int n = sizeof(arr)/sizeof(arr[0]);

       if((pos >= n) || (pos < 0)){
       	//checking if position is in array bound
       	throw "Array out of bound exception...\n";
       }

       //now try to insert in the given position
       int i;
       for (i= pos-1; ( i >= 0  && arr[i] > value); i--){
            arr[i+1] = arr[i];
       }
 
 	   //insert the value at the position
       arr[i+1] = value; 
}


int main(int argc, char const *argv[])
{
	int arr[6] = {10,13,14,17,21,25};

	cout<<"Array before insertion: ";
	//see before insertion
	for(int i=0; i<6; i++){
		cout<<arr[i];
	}
	cout<<"\n";

	//insert 15 at 3 
	try{
	    insert_pos(arr, 15, 3);

	    cout<<"Array after insertion: ";
    	//see after insertion
	    for(int i=0; i<6; i++){
	    	cout<<arr[i];
	    }
	    cout<<"\n";
    }catch(const char *e){
    	//display the error msg
    	cout<<e;
    }
	
	return 0;
}//@rofi

/*
18. Write functions to compute the factorial of a number using both recursive and non-recursive procedure.
*/
#include<iostream>
using namespace std;

//Non-recursive version
long long  int factorial_nr(int n)
{
	long long int fact = 1;
      for(int i=1; i<=n; i++){
      	fact *=i;
      }
      return fact;
}

//Recursive version
long long int factorial_rc(int n)
{
	if(n==0 || n==1)
		return 1;


	return n*factorial_rc(n-1);
}


int main(int argc, char const *argv[])
{
	int n;

	cout<<"Input a number to calculate factorial:";
	cin>>n;


	//display result
	cout<<"The factorial of"<<n<<" is: "
	    <<"\n <recursivly calculated> "<<factorial_rc(n)
	    <<"\n <non-recursivly calculated> "<<factorial_nr(n)<<"\n";
	return 0;
}//@rofi

/*
19. Write a program to print the values of ncr and npr   
for given positive integers n r > 0.  Use a function 
fact(n)to return the factorial of a non-negative integer n.
ncr=n!/r!*(n-r)!	npr=n!/(n-r)!
*/

#include <iostream>
using namespace std;


//Recursive version
long long int fact(int n)
{
	if(n==0 || n==1)
		return 1;


	return n*fact(n-1);
}


int main(int argc, char const *argv[])
{
	/* code */
	int n, r, n_P_r, n_C_r;


	//read n , r>0
	cout<<"Input 'n' and 'r'<positive integers>: ";
	cin>>n>>r;

	//calculate permutation
	n_P_r = fact(n)/fact(n-r);

	//combination
	n_C_r = fact(n)/(fact(r)*fact(n-r));


	//display
	cout<<"nPr = "<<n_P_r
	    <<"\nn_C_r = "<<n_C_r<<"\n";


	return 0;
}/**
@rofi
*/

/*convert temperature from celcius scale to fehrenheit scale & vise versa*/
#include<iostream>
#include<cmath>
#include<cctype>
using namespace std;

/**
*converts temp
by default choice 
is to convert 
to fehrenheiht
**/

float convert_temp(float temp,char choice = 'F')
{
	//conversion to fehren
	if(choice == 'F' || choice == 'f'){
		return float((9/5)*temp + 32);
	}

    //conversion to celcius
	else if(choice == 'C' || choice == 'c'){
		return float((temp - 32)*(5/9));
	}
    
    //throw excepction
	else throw "Invalid Choice !!!";

}

int main()
{
	char choice;
	float temp;

	cout<<"Enter Your Temperature :";
	cin>>temp;

	cout<<"Choose Conversion Scale<F for Fahrenheit , C for Celsius> :";
    cin>>choice;


    //using try catch block 
    try{
    	cout<<"Converted Temperature is : "<<convert_temp(temp,choice)<<"\n";
    }catch(const char *msg){
    	//show the error msg
    	cout<<msg<<"\n";

    }


	return 0;
}//@rofi

/**
20. Write a program to display the first n Fibonacci numbers using function.
*/

#include<iostream>
using namespace std;

//displays first n fibonacci numbers
//dynamic programming version(memoization...)
void fib(int n)
{
  //array to store Fibonacci numbers.
  int f[n+2];   // 1 extra to handle case, n = 0
  int i;
 
  //0th and 1st number of the series are 0 and 1
  f[0] = 0;
  f[1] = 1;
  cout<<f[0]<<" "<<f[1];
 
  for (i = 2; i < n; i++)
  {
      //add the previous 2 numbers
      f[i] = f[i-1] + f[i-2];
      cout<<" "<<f[i];
  }

}


//general version
void fibo_nr(int n)
{
	int f_1 = 0, f_2 = 1, c=2;

	cout<<" "<<f_1<<" "<<f_2;

	for(int i=2; i<n; ++i)
	{
		int f= f_1 + f_2;
		cout<<" "<<f;

		f_1=f_2;
		f_2=f;
	}
	
}





int main(int argc, char const *argv[])
{
	/* code */
	fibo_nr(10);
	cout<<"\n";
	return 0;
}//@rofi

/**
21. Write a program to display the prime numbers within a given range. 
Write a function to check whether a given integer is prime or not and use it.
*/

#include<iostream>
using namespace std;


//function to check prime number
bool is_prime(int n)
{
	if(n <=1){
		//check for 1
		return false;
	}
	
	for(int i=2; i<n/2; i++){

		//check for divisor
		if(n%i == 0){
			return false;
		}
	}

	return true;
}


int main(int argc, char const *argv[])
{
	int low, high;

	//read the range
	cout<<"Input the range <lower range - upper range> respectively: ";
	cin>>low>>high;

	//loop through all numbers in the range
	cout<<"The prime numbers in the given range are: ";
	for(int i=low; i<=high; i++){
        
        //cehck & display if prime 
		if(is_prime(i) == true){
			cout<<" "<<i;
		}
	}
	cout<<"\n";
	return 0;
}//@rofi
/**
23. Write a program to display the upper Triangle and 
lower Triangle of a given square matrix using function.
*/
#include <iostream>
using namespace std;

//function to display a matrix
void display_matrix(int a[][10], int n)
{
    int i,j;
	
	for(i=0; i<n; i++)
	{
		for(j=0; j<n; j++)
		{
			cout<<a[i][j]<<" ";
		}
		cout<<"\n";
	}
	cout<<"\n";
}

//function to display upper triangular matrix
void upper_triangular(int a[][10], int n)
{
    int i,j;
	
	for(i=0; i<n; i++)
	{
		for(j=0; j<n; j++)
		{
			//check for upper triangular
			if(i<=j){
				cout<<a[i][j]<<" ";
			}else{
				cout<<"0"<<" ";
			}
		}
		cout<<"\n";
	}
	cout<<"\n";
}


//function to display lower triangular matrix
void lower_triangular(int a[][10], int n)
{
    int i,j;
	
	for(i=0; i<n; i++)
	{
		for(j=0; j<n; j++)
		{
			//check for upper triangular
			if(i>=j){
				cout<<a[i][j]<<" ";
			}else{
				cout<<"0"<<" ";
			}
		}
		cout<<"\n";
	}
	cout<<"\n";
}


int main()
{
	//test case
	int matrix[][10] = {
	     					{1,2,3},
                            {2,4,5},
                            {3,5,6}
     					};

    //Input matrix is
    cout<<"Input matrix : \n";
    display_matrix(matrix,3);


   //function call
   cout<<"upper triangular: \n";
   upper_triangular(matrix,3); 


   cout<<"lower triangular: \n";
   lower_triangular(matrix,3); 

	return 0;
}//rofi
/*
24. Write a function to check if a given square matrix is symmetric or not.
 Write a main function to implement it.
**/

#include <iostream>
using namespace std;



//inputed matrix can be 10x10 ordered matrix or lesser 
bool is_symmetric(int matrix[][10], int n)
{
	int i=0,j=0;

	//check if every matrix[i][j] = matrix[j][i] or not
	for(i=0; i<n; i++)
	{
		for(j=0; j<n; j++)
		{
			//condition
			if(matrix[i][j] != matrix[j][i]){
				return false;
			}
		}
	}

    //if all are same 
	return true;
}

int main()
{
	//test case
	int matrix[][10] = {
	     					{1,2,3},
                            {2,4,5},
                            {3,5,6}
     					};


    //function call
    cout<<(is_symmetric(matrix,3)? "The given matrix is symmetric.\n":"The given matrix is asymmetric.\n"); 					
	return 0;
}//@rofi
/**
25. Write a program  to read a m x n matrix and 
calculate the Row sum and Column Sum of the matrix
*/
#include <iostream>
using namespace std;


//rofi
/*
27. Write a program to merge two sorted arrays.
*/
#include<iostream>
using namespace std;

void merge_sorted_arrays(int a1[], int a2[], int n1, int n2[], int a[])
{
	

} //@rofi
/**
28. Write a program to implement selection sort using function.
*/

#include<iostream>
using namespace std;

void selection_sort(int a[], int n)
{
	int i, j, least, temp;

	for(i=0; i<n-1; i++)
	{
		
		//considering minimum valued index
		least = i;
		for(j=i+1; i<n; i++)
			//check
			//least = a[j]< a[least] ? j : least;
			if(a[j]< a[least]){
				least = j;
			}
		


		//swap the minimum value with the current position value
		temp = a[i];
		a[i] = a[least];
		a[least] = temp;
	}
}

int main(int argc, char const *argv[])
{
	int a[] = {1,20,11,8,22,19};

	int size = sizeof(a)/sizeof(a[0]);
	//displaying before and after sorting
	//cout<<"before selection_sort: ";
	//for(int i=0; i<size; i++){cout<<a[i]<<" ";}
	cout<<"\n";

	//sort 
    selection_sort(a,size);
    cout<<"after selection_sort: ";
    for(int i=0; i<size; i++){cout<<a[i]<<" ";}
	cout<<"\n";


	return 0;
}//@rofi
/**
29. Write a program to   count the number of vowels in a string.
*/

#include <iostream>
#include <cctype>

using namespace std;

int main(int argc, char const *argv[])
{
	char str[11] = "helloworld";

	//loop through string 
	int i=0, c=0;
	while(str[i] != '\0')
	{
		if(str[i] == 'a' || str[i] == 'e' || str[i] == 'i' || str[i] == 'o' || str[i] == 'u'){
			//check tf the character is vowel
			c += 1;
		}
		i++;
	}

	//display the number of vowels in string
	cout<<"No of vowels in '"<<str<<"' is "<<c<<"\n";
	return 0;
}/**
@rofi
*/

/*ASCII value of a character*/
#include<iostream>
using namespace std;

int main()
{
	char ch;
	cout<<"Enter a char: ";
	cin>>ch;
	cout<<"ASCII of '"<<ch
	    <<"' is : "<<int(ch)<<"\n";
	return 0;
}//@rofi
/*
Write a program to convert a string from upper case to lower case and vice versa.
*/
#include <iostream>
#include <cctype>

using namespace std;

int main(int argc, char const *argv[])
{
	char str[11] = "helloWORLD", nstr[11];

	//loop through string 
	int i=0;
	while(str[i] != '\0')
	{
		nstr[i] = islower(str[i])? toupper(str[i]): tolower(str[i]);
		i++;
	}

	//at the end add '\0'
	nstr[i++] = '\0';


	//display the case converted string
	cout<<str<<" is case converted to "<<nstr<<"\n";
	return 0;
}//@rofi
/**
32. Write a program to swap two numbers using function (pass the pointers).
*/
#include<iostream>
using namespace std;

void swap(int *a, int *b)
{
	int *temp;

	temp = a;
	a = b;
	b = temp;

}

int main(int argc, char const *argv[])
{
	int *a, *b;

	cin>>*a>>*b;
	cout<<a<<" "<<b;


	swap(a, b);

	cout<<*a<<" "<<*b;

	return 0;
}/**
@rofi
*/

/*Perfect Number Check*/
#include<iostream>
using namespace std;

int main(int argc, char const *argv[])
{
	int n, sum=0;
	cout<<"Input a number to check if perfect:";
	cin>>n;

	for(int i=1; i<=n/2; i++){
		//check if divisor
		if(n%i == 0){
			sum +=i;
		}
	}


	//condition for perfect number
	if(n == sum){
		cout<<n<<" is a perfect number \n";
	}else{
		cout<<n<<" is not a perfect number \n";
	}
	return 0;
}
/**
@rofi
*/

/*Biggest Of 3 Numbers Using Nested If*/
#include<iostream>
#include<cctype>
using namespace std;

int main(int argc, char const *argv[])
{
	int a, b, c, biggest;
	cout<<"Input 3 Numbers:";
	cin>>a>>b>>c;


	if(a>b){
		biggest = a;
	}else{
		biggest = b;
	}

	if(biggest>c){
		cout<<"Biggest Number Is "<<biggest<<"\n";
	}else{
		biggest = c;
		cout<<"Biggest Number Is "<<biggest<<"\n";
	}

	return 0;
}


/**
@rofi
*/

/*Driver Insurance*/
#include<iostream>
#include<cctype>
using namespace std;


bool is_insured( int age, char gender, char marital_status)
{
	return((marital_status == 'Y') || (marital_status == 'N' && gender == 'M' && age>30) || (marital_status == 'N' && gender == 'F' && age>25));
}

int main(int argc, char const *argv[])
{
	char gender, marital_status;
	int age;

	cout<<"Input Driver Details\n";
	cout<<"Age:";
	cin>>age;

	cout<<"Gender <M for male, F for female>:";
	cin>>gender;
	gender = islower(gender)? tolower(gender) : gender;

	cout<<"Marital status <Y yes, N no>:";
	cin>>marital_status;
	marital_status = islower(marital_status)? tolower(marital_status) : marital_status;


	if(is_insured(age, gender, marital_status) == true){
		cout<<"Driver is getting insured...\n";
	}else{
		cout<<"Driver is not getting insured...!!!\n";
	}
	return 0;
}
/**
@rofi
*/

/*Inputing positive numbers and separtly displaying as odd and even*/
#include<iostream>
using namespace std;


int main(int argc, char const *argv[])
{
	int num, even[10], odd[10], c_1=0 ,c_2=0;


	cout<<"Input Positive Integers<to stop input -1>:";

	//read numbers
	while(1){
		cin>>num;
		if(num == -1)
			break;
	    else{
	      	//if even add to even array
	    	if(num%2 == 0){
	    		even[c_1++] = num;
	    	}else{
	    		odd[c_2++] = num;
	    	}
	    }
	}


	//Display the Odd-Even separetly
	cout<<"Total "<<c_1<<" Even numbers & "<<c_2<<" Odd numbers Are Inputed.\n";

	cout<<"Even Numbers : ";
	for(int i=0; i<c_1; i++){
		cout<<even[i]<<" ";
	}

	cout<<"\nOdd Numbers : ";
	for(int j=0; j<c_2; j++){
		cout<<odd[j]<<" ";
	}
    cout<<"\n";
	return 0;
}
/**
@rofi
*/

/*using switch case*/
#include<iostream>
using namespace std;

int main()
{
	int n, x;

	//read n x
	cout<<"Input the values of n and x:";
	cin>>n>>x;


	//switch case
	switch(n){
		case 1:cout<<"Output: "<<(n+x)<<"\n";
		       break;
		case 2:cout<<"Output: "<<float(1 + (x/n))<<"\n";
		       break;
		case 3:cout<<"Output: "<<(n + 3*x)<<"\n";
		       break;
		default:cout<<"Output: "<<(1+ n*x)<<"\n";
		        

	}
	return 0;
}/**
@rofi
*/

/*
8. Write  a  program to n values of sales and then calculate the commission on sales amount where the commission is calculated as follows:
a. If sales <= Rs.500, commission is 5%.
b. If sales  > 500 but <= 2000, commission is Rs 35 plus 10% above Rs 500.
c. If sales  > 2000 but <= 5000,commission is Rs 185 plus 12% above Rs.2000.
d. If sales  > 5000 ,commission is 12.5%.
*/
#include<iostream>
using namespace std;

/*function to calculate commision*/
float getcommision(float price)
{
	if(price <= 500){
		//condition a
		return float(0.05*price);
	}

	else if(price>500 && price<=2000){
		//condition b
		return float(35 + (price - 500)*0.10);
	}

	else if(price>2000 && price<=5000){
		//condition c
		return float(185 + (price - 2000)*0.12);
	}

	else if(price>5000){
		//condition d
		return float(price*0.125);
	}

}

int main(int argc, char const *argv[])
{
	float sales[100], commission=0.0;
	int n;

	cout<<"How many sales:";
	cin>>n;


	//read the sales and also count commision and sum 
	for(int i=0; i<n; i++){
		cout<<"\nInput "<<i+1<<"th sale amount: ";
		cin>>sales[i];


		//calculate commision 
		float single_commission = getcommision(sales[i]);


		//add to total commision
		commission += single_commission;
	}


	//Display total comission
	cout<<"\nThe total commission is: Rs."<<float(commission)<<"/- only.\n";
	return 0;
}

/**
@rofi
*/

/*min, max, sum, avg of n-numbers without using array*/
#include<iostream>
using namespace std;


int main(int argc, char const *argv[])
{
	int count, input, sum, max , min , avg;

	cout<<"How Many Numbers:";
	cin>>count;
	cout<<"Input the numbers one by one";
	
	for(int i=0; i<count; i++){
		cout<<"\n Input "<<i+1<<"th Number: ";
		cin>>input;
  
   		//add to sum
   		sum +=input;

   		//if greater than the current  maximum change max 
		if(input>max){
			max = input;
		}


		//if less the current minimum change min
		if(input<min){
			min = input;
		}
	}


	//calculate average
	avg = float(sum/count);

	//Display the results
	cout<<"\n The Maximum is :"<<max
	    <<"\n The Minimum is :"<<min
	    <<"\n The Sum is     :"<<sum
	    <<"\n The Average is :"<<avg
	    <<"\n";
	return 0;
}
